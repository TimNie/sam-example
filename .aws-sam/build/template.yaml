AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app

  Sample SAM Template for sam-app

  '
Globals:
  Function:
    Timeout: 3
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: MyLambdaRequestAuthorizer
        Authorizers:
          MyLambdaRequestAuthorizer:
            FunctionPayloadType: REQUEST
            FunctionArn:
              Fn::GetAtt:
              - MyAuthFunction
              - Arn
            Identity:
              QueryStrings:
              - auth
              ReauthorizeEvery: 100
  ServiceAFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceAFunction
      Handler: index.lambdaHandler
      Runtime: nodejs10.x
      Events:
        ServiceA:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /servicea
            Method: get
  ServiceAdminFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServiceAdminFunction
      Handler: index.lambdaHandler
      Runtime: nodejs10.x
      Events:
        ServiceAdmin:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /serviceAdmin
            Method: get
  MyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyAuthFunction
      Handler: index.handler
      Runtime: nodejs10.x
Outputs:
  ServiceAFunctionApiA:
    Description: API Gateway endpoint URL for Prod stage for service A function
    Value:
      Fn::Sub: https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/servicea/
  ServiceAFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ServiceAFunction
      - Arn
  ServiceAFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - ServiceAFunctionRole
      - Arn
